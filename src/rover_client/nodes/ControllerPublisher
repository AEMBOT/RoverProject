#!/usr/bin/python3
"""Publishes the current controller state to a topic to be accessed from anywhere"""

import rospy

from rover_main.msg import controllerMap
from rover_client.srv import ControlService

def create_node():
    # Start the new node to being receiving information
    rospy.init_node("ControllerPublisherNode")

    # Connect to the controller service to receive information about the controller state
    rospy.wait_for_service("controller_service")
    controller_service = rospy.ServiceProxy("controller_service", service_class=ControlService, persistent=True)

    controller_topic = rospy.Publisher(name="controller_state", data_class=controllerMap, queue_size=1000)

    # Communication Update Rate
    update_rate = rospy.Rate(250)

    while not rospy.is_shutdown():

        # Update the controller state that the rover has
        try:
            controller_topic.publish(controller_service().controllerState)
        except rospy.ServiceException as e:
            print(f"An error ocurred when contacting the service: {e}")
        
        update_rate.sleep()

if __name__ == "__main__":
    create_node()