#!/usr/bin/python3

"""Service called whenever the robot/operator need information regarding the current controller state"""

import rospy

from rover_client.srv import ControlService,ControlServiceResponse

from control.ControllerUpdater import ControllerUpdater

CONTROLLER_UPDATER = ControllerUpdater()

def on_service_contact(requested):
    """Called when the service is requested"""

    return ControlServiceResponse(CONTROLLER_UPDATER.get_current_controller_state())

def start_service():
    """Start the service and node"""


    # Create a node to run the service from
    rospy.init_node("controller_service", anonymous=True)

    # Create the actual service
    controller_service = rospy.Service(name="controller_service",
                                       service_class=ControlService,
                                       handler=on_service_contact)

    # Start the controller monitoring thread
    CONTROLLER_UPDATER.start_controller_monitor()

    # Announce that the setup is complete
    rospy.loginfo_once("Awaiting Controller Input...")

    # Wait until the service is terminted
    rospy.spin()
    

if __name__ == "__main__":
    start_service()
    


